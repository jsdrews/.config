# https://taskfile.dev

version: '3'

tasks:
  starship-prompt:
    desc: installs starship prompt
    cmds:
      - curl -sS https://starship.rs/install.sh | sh
    env:
      BIN_DIR: "{{ .HOME }}/.local/bin" 
    preconditions:
      - command -v curl
    status:
      - command -v starship

  direnv:
    desc: installs direnv
    cmds:
      - curl -sfL https://direnv.net/install.sh | bash
    env:
      bin_path: "{{ .HOME }}/.local/bin" 
    preconditions:
      - command -v curl
    status:
      - command -v direnv

  nix:
    desc: installs nix
    cmds:
      - sh <(curl -L https://nixos.org/nix/install) --daemon  # --no-daemon for singleuser installs
    preconditions:
      - command -v curl
    status:
      - command -v nix

  nvim-0.9.5:
    desc: installs nvim
    cmds:
      - curl -s -L -o $BUILD_DIR/nvim-0.9.5.tar.gz https://github.com/neovim/neovim/releases/download/v$NVIM_VERSION/nvim-macos.tar.gz 
      - tar -xvf $BUILD_DIR/nvim-0.9.5.tar.gz -C $BUILD_DIR
      - ln -sf $BUILD_DIR/nvim-macos/bin/nvim $INSTALL_DIR/nvim
      - rm -rf $BUILD_DIR/nvim-0.9.5.tar.gz
    env:
      BUILD_DIR: "{{ .PWD }}/build"
      INSTALL_DIR: "{{ .HOME }}/.local/bin"
      NVIM_VERSION: 0.9.5
    preconditions:
      - command -v curl
    status:
      - command -v nvim

  go:
    desc: installs go
    cmds:
      - scripts/install-go.sh
    env:
      BUILD_DIR: "{{ .PWD }}/build"
      INSTALL_DIR: "{{ .HOME }}/.local/bin"
      GO_VERSION: 1.23.1
      GO_PLATFORM_ARCH: darwin-arm64
    preconditions:
      - command -v curl
    status:
      - command -v go

  git-2.20.5:
    desc: install git
    cmds:
      - curl https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.20.5.tar.gz
    preconditions:
      - command -v curl
    
  lazygit:
    desc: installs lazygit
    cmds:
      - go install github.com/jesseduffield/lazygit@latest
    env:
      GOBIN: "{{ .HOME }}/.local/bin"
    preconditions:
      - command -v go
    status:
      - command -v lazygit

  goimports:
    desc: install goimports
    cmds:
      - go install golang.org/x/tools/cmd/goimports@latest
    env:
      GOBIN: "{{ .HOME }}/.local/bin"
    preconditions:
      - command -v go
    status:
      - command -v goimports

  rust:
    desc: install rust
    cmds:
      - curl https://sh.rustup.rs -sSf | sh
    # - rustup self uninstall <- to uninstall
    preconditions:
      - command -v curl
    status:
      - command -v cargo
      - command -v rustup

  python3.10:
    desc: install python
    cmds:
      - scripts/install-python.sh
    env:
      BUILD_DIR: "{{ .PWD }}/build"
      INSTALL_DIR: "{{ .HOME }}/.local"
      PYTHON_VERSION: 3.10.15
    preconditions:
      - command -v make
      - command -v clang
      - command -v g++ 
      - command -v curl
    status:
      - command -v python3

  pipx:
    desc: install pipx 
    cmds:
      - python3 -m venv $BUILD_DIR/pipx-venv
      - $BUILD_DIR/pipx-venv/bin/python3 -m pip install pipx 
      - ln -s $BUILD_DIR/pipx-venv/bin/pipx $INSTALL_DIR/pipx
    env:
      BUILD_DIR: "{{ .PWD }}/build"
      INSTALL_DIR: "{{ .HOME }}/.local/bin"
    preconditions:
      - command -v python3 
    status:
      - command -v pipx

  zellij:
    desc: install zellij
    cmds:
      - cargo install --locked zellij
    preconditions:
      - command -v cargo
    status:
      - command -v zellij

  ripgrep:
    desc: install ripgrep
    cmds:
      - cargo install ripgrep
    preconditions:
      - command -v cargo
    status:
      - command -v ripgrep
